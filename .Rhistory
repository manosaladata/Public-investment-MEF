encoding = "utf-8")%>%
html_nodes(css=".wikitable")%>%
html_table(header = TRUE,fill = TRUE)%>%
as.data.frame()
#Agregamos la región
DataRegion <- DataRegion%>%
mutate(Región=NombreRegion[j])
#le convertimos a todos en character
#Para que no tenga problemas el bind_rows
DataRegion[,] <- sapply(DataRegion[,], function(x) as.character(x))
#Juntamos la data
DataRegiones <- bind_rows(DataRegiones,DataRegion)
#Que descance un rato
Sys.sleep(8)
}
View(DataRegiones)
#Eliminamos las variables irrelevante
DataRegiones2 <- DataRegiones[,c(-8,-15,-16,-21)]
View(DataRegiones2)
#Eliminamos las variables irrelevante
DataRegiones2 <- DataRegiones[,-c(8,15,16,21)]
View(DataRegiones2)
#Eliminamos las variables irrelevante
DataRegiones <- DataRegiones[,-c(8,15,16,21)]
View(DataRegiones)
setwd("~/GitHub/R proyectos/Public-investment-MEF")
saveRDS(DataRegiones,file = "ShinyAppSIAF/DataGobiernosRL/Gregionales.rds")
library(tidyverse)
DataRegiones <- readRDS(file = "ShinyAppSIAF/DataGobiernosRL/Data_GregionalLimpia.rds")
View(DataRegiones)
unique(DataRegiones$Región)
#Huánuco estuvo en otro links
LinkHua <- "https://es.wikipedia.org/wiki/Anexo:Gobernadores_regionales_de_Hu%C3%A1nuco"
DataHuanu <- read_html(x = LinkHua,
encoding = "utf-8")%>%
html_nodes(css=".wikitable")%>%
html_table(header = TRUE,fill = TRUE)%>%
as.data.frame()
library(rvest)
DataHuanu <- read_html(x = LinkHua,
encoding = "utf-8")%>%
html_nodes(css=".wikitable")%>%
html_table(header = TRUE,fill = TRUE)%>%
as.data.frame()
View(DataHuanu)
#Agregamos el nombre de la región
DataHuanu <- DataHuanu%>%
mutate(Región="Huánuco")
View(DataHuanu)
DataHuanu <- DataHuanu%>%
select(-(1:2))
View(DataHuanu)
View(DataRegiones)
names(DataHuanu)[1] <- "Gobernante"
View(DataHuanu)
DataRegiones <- bind_rows(DataRegiones,DataHuanu)
View(DataRegiones)
unique(DataRegiones$Región)
rm(list = setdiff(ls(),c("DataRegiones")))
View(DataRegiones)
#rm(list = setdiff(ls(),c("DataRegiones")))
unique(DataRegiones$Gobernante)
DataRegiones[,2] <- sapply(DataRegiones[,2], function(x) str_remove_all(x,
pattern = "nota "))
#rm(list = setdiff(ls(),c("DataRegiones")))
unique(DataRegiones$Gobernante)
DataRegiones[,2] <- sapply(DataRegiones[,2], function(x) str_remove_all(x,
pattern = "\\d")) #Borra 0-9
#rm(list = setdiff(ls(),c("DataRegiones")))
unique(DataRegiones$Gobernante)
DataRegiones[,2] <- sapply(DataRegiones[,2], function(x) str_remove_all(x,
pattern = "[:punct:]")) #"\\d":Borra 0-9,"[:punct:]": elimina signos de pun
#rm(list = setdiff(ls(),c("DataRegiones")))
unique(DataRegiones$Gobernante)
#rm(list = setdiff(ls(),c("DataRegiones")))
unique(DataRegiones$Agrupación.política)
DataRegiones[,3] <- sapply(DataRegiones[,3], function(x) str_replace_all(x,
pattern = "  ",
replacement = " "))
#rm(list = setdiff(ls(),c("DataRegiones")))
unique(DataRegiones$Agrupación.política)
#rm(list = setdiff(ls(),c("DataRegiones")))
unique(DataRegiones$Periodo)
#rm(list = setdiff(ls(),c("DataRegiones")))
unique(DataRegiones$Vez.de.Gobierno)
DataRegiones[,5] <- sapply(DataRegiones[,5], function(x) str_replace_all(x,
pattern = "Único|Única",
replacement = "1ª"))
#rm(list = setdiff(ls(),c("DataRegiones")))
unique(DataRegiones$Vez.de.Gobierno)
#rm(list = setdiff(ls(),c("DataRegiones")))
unique(DataRegiones$Asunción)
DataRegiones[,6] <- sapply(DataRegiones[,6], function(x) str_replace_all(x,
pattern = "Jurado Nacional de Elecciones",
replacement = "JNE"))
#rm(list = setdiff(ls(),c("DataRegiones")))
unique(DataRegiones$Asunción)
DataRegiones[,6] <- sapply(DataRegiones[,6], function(x) str_remove_all(x,
pattern = "\\d|[:punct:]")) #"\\d":Borra 0-9,"[:punct:]": elimina signos de pun
View(DataRegiones)
#rm(list = setdiff(ls(),c("DataRegiones")))
unique(DataRegiones$Asunción)
#Vamos separar la culumna fecha
DataRegiones <- DataRegiones%>%
separate(col = 4,into = c("Periodo inicial","Periodo final"),sep =" - " )
View(DataRegiones)
fix(DataRegiones)
View(DataRegiones)
fix(DataRegiones)
unique(DataRegiones$`Periodo inicial`)
unique(DataRegiones$`Periodo final`)
DataRegiones[,5] <- sapply(DataRegiones[,5], function(x) str_trim(x)) #
unique(DataRegiones$`Periodo final`)
DataRegiones[,c(2:8)] <- sapply(DataRegiones[,c(2:8)], function(x) str_trim(x)) #
DataRegiones[,5] <- sapply(DataRegiones[,5], function(x) str_replace_all(x,
pattern = "en funciones|En funciones",
replacement = "17 de mayo de 2021")) #Fecha de descarga
unique(DataRegiones$`Periodo final`)
DataRegiones[,5] <- sapply(DataRegiones[,5], function(x) str_replace_all(x,
pattern = "en funciones|En funciones|En Funciones",
replacement = "17 de mayo de 2021")) #Fecha de descarga
unique(DataRegiones$`Periodo final`)
#Guardamos la data limpia
saveRDS(DataRegiones,file = "DataGobiernosRL/Data_GregionalLimpia.rds")
#Guardamos la data limpia
saveRDS(DataRegiones,file = "ShinyAppSIAF/DataGobiernosRL/Data_GregionalLimpia.rds")
View(DataRegiones)
unique(DataRegiones$`Periodo inicial`)
#Convertimos en formato fecha
DataRegiones <- DataRegiones%>%
mutate(Fecha1=`Periodo inicial`,
Fecha2=`Periodo final`)
View(DataRegiones)
unique(DataRegiones$`Periodo inicial`)
unique(DataRegiones$`Periodo final`)
DataRegiones[,c(4:5)] <- sapply(DataRegiones[,c(4:5)], function(x) str_remove_all(x,
pattern = "[:punct:]")) #"[:punct:]": elimina signos de pun
unique(DataRegiones$`Periodo final`)
unique(DataRegiones$`Periodo inicial`)
DataRegiones[,c(2:8)] <- sapply(DataRegiones[,c(2:8)], function(x) str_trim(x)) #
DataRegiones <- DataRegiones[,-c(9:10)]
#Convertimos en formato fecha
DataRegiones <- DataRegiones%>%
mutate(Fecha1=`Periodo inicial`,
Fecha2=`Periodo final`)
View(DataRegiones)
unique(DataRegiones$`Periodo inicial`)
#Convertimos en formato fecha
unique(DataRegiones$Fecha2)
DataRegiones[,c(9:10)] <- sapply(DataRegiones[,c(9:10)], function(x) str_replace_all(x,
pattern = "^0",
replacement = "")) #
#Convertimos en formato fecha
unique(DataRegiones$Fecha2)
#Convertimos en formato fecha
unique(DataRegiones$Fecha1)
DataRegiones[,c(9:10)] <- sapply(DataRegiones[,c(9:10)], function(x) str_replace_all(x,
pattern = "de",
replacement = "-")) #
#Convertimos en formato fecha
unique(DataRegiones$Fecha1)
#Convertimos en formato fecha
unique(DataRegiones$Fecha2)
DataRegiones[,c(9:10)] <- sapply(DataRegiones[,c(9:10)], function(x) str_replace_all(x,
pattern = "enero",
replacement = "1")) #
DataRegiones[,c(9:10)] <- sapply(DataRegiones[,c(9:10)], function(x) str_replace_all(x,
pattern = "marzo",
replacement = "3")) #
DataRegiones[,c(9:10)] <- sapply(DataRegiones[,c(9:10)], function(x) str_replace_all(x,
pattern = "mayo",
replacement = "5")) #
#Convertimos en formato fecha
unique(DataRegiones$Fecha2)
DataRegiones[,c(9:10)] <- sapply(DataRegiones[,c(9:10)], function(x) str_replace_all(x,
pattern = "abril",
replacement = "4")) #
DataRegiones[,c(9:10)] <- sapply(DataRegiones[,c(9:10)], function(x) str_replace_all(x,
pattern = "junio",
replacement = "6")) #
DataRegiones[,c(9:10)] <- sapply(DataRegiones[,c(9:10)], function(x) str_replace_all(x,
pattern = "julio",
replacement = "7")) #
DataRegiones[,c(9:10)] <- sapply(DataRegiones[,c(9:10)], function(x) str_replace_all(x,
pattern = "agosto",
replacement = "8")) #
DataRegiones[,c(9:10)] <- sapply(DataRegiones[,c(9:10)], function(x) str_replace_all(x,
pattern = "septiembre",
replacement = "9")) #
DataRegiones[,c(9:10)] <- sapply(DataRegiones[,c(9:10)], function(x) str_replace_all(x,
pattern = "octubre",
replacement = "10")) #
DataRegiones[,c(9:10)] <- sapply(DataRegiones[,c(9:10)], function(x) str_replace_all(x,
pattern = "noviembre",
replacement = "11")) #
DataRegiones[,c(9:10)] <- sapply(DataRegiones[,c(9:10)], function(x) str_replace_all(x,
pattern = "diciembre",
replacement = "12")) #
#Convertimos en formato fecha
unique(DataRegiones$Fecha1)
#Convertimos en formato fecha
unique(DataRegiones$Fecha2)
DataRegiones <- DataRegiones%>%
select(c(1:5,9:10),everything())
View(DataRegiones)
library(lubridate)
View(DataRegiones)
DataRegiones[,c(6:7)] <- sapply(DataRegiones[,c(6:7)], function(x) dmy(x)) #
View(DataRegiones)
DataRegiones[,c(6:7)] <- sapply(DataRegiones[,c(6:7)], function(x) as.Date(x)) #
View(DataRegiones)
DataRegiones[,c(6:7)] <- sapply(DataRegiones[,c(6:7)], function(x) as_date(x)) #
View(DataRegiones)
DataRegiones <- DataRegiones[,-c(6,7)]
DataRegiones <- DataRegiones%>%
mutate(Fecha1=`Periodo inicial`,
Fecha2=`Periodo final`)
View(DataRegiones)
#Convertimos en formato fecha
unique(DataRegiones$Fecha2)
DataRegiones[,c(9:10)] <- sapply(DataRegiones[,c(9:10)], function(x) str_replace_all(x,
pattern = " de ",
replacement = "-")) #
View(DataRegiones)
#Convertimos en formato fecha
unique(DataRegiones$Fecha1)
#Convertimos en formato fecha
unique(DataRegiones$Fecha2)
DataRegiones[,c(9:10)] <- sapply(DataRegiones[,c(9:10)], function(x) dmy(x,locale = "es")) #
DataRegiones[,c(9:10)] <- sapply(DataRegiones[,c(9:10)], function(x) dmy(x,locale = Sys.setlocale(locale = "en_US.UTF-8"))) #
DataRegiones[,c(9:10)] <- sapply(DataRegiones[,c(9:10)], function(x) dmy(x,locale = Sys.setlocale("LC_TIME",locale = "en_US.UTF-8"))) #
View(DataRegiones)
DataRegiones[,c(9:10)] <- sapply(DataRegiones[,c(9:10)], function(x) str_replace_all(x,
pattern = "^0",
replacement = "")) #
#Convertimos en formato fecha
unique(DataRegiones$Fecha2)
DataRegiones[,c(9:10)] <- sapply(DataRegiones[,c(9:10)], function(x) dmy(x,locale = Sys.setlocale("LC_TIME",locale = "en_US.UTF-8"))) #
DataRegiones[,c(9:10)] <- sapply(DataRegiones[,c(9:10)], function(x) dmy(x,locale = Sys.setlocale("LC_TIME",locale = "en_US.UTF-8"))) #
#Convertimos en formato fecha
unique(DataRegiones$Fecha2)
#Convertimos en formato fecha
unique(DataRegiones$Fecha1)
DataRegiones[,c(9:10)] <- sapply(DataRegiones[,c(9:10)], function(x) str_replace_all(x,
pattern = "enero",
replacement = "01")) #
DataRegiones[,c(9:10)] <- sapply(DataRegiones[,c(9:10)], function(x) str_replace_all(x,
pattern = "marzo",
replacement = "03")) #
DataRegiones[,c(9:10)] <- sapply(DataRegiones[,c(9:10)], function(x) str_replace_all(x,
pattern = "abril",
replacement = "04")) #
DataRegiones[,c(9:10)] <- sapply(DataRegiones[,c(9:10)], function(x) str_replace_all(x,
pattern = "mayo",
replacement = "05")) #
DataRegiones[,c(9:10)] <- sapply(DataRegiones[,c(9:10)], function(x) str_replace_all(x,
pattern = "junio",
replacement = "06")) #
DataRegiones[,c(9:10)] <- sapply(DataRegiones[,c(9:10)], function(x) str_replace_all(x,
pattern = "julio",
replacement = "07")) #
DataRegiones[,c(9:10)] <- sapply(DataRegiones[,c(9:10)], function(x) str_replace_all(x,
pattern = "agosto",
replacement = "08")) #
DataRegiones[,c(9:10)] <- sapply(DataRegiones[,c(9:10)], function(x) str_replace_all(x,
pattern = "septiembre",
replacement = "09")) #
DataRegiones[,c(9:10)] <- sapply(DataRegiones[,c(9:10)], function(x) str_replace_all(x,
pattern = "octubre",
replacement = "10")) #
DataRegiones[,c(9:10)] <- sapply(DataRegiones[,c(9:10)], function(x) str_replace_all(x,
pattern = "noviembre",
replacement = "11")) #
DataRegiones[,c(9:10)] <- sapply(DataRegiones[,c(9:10)], function(x) str_replace_all(x,
pattern = "diciembre",
replacement = "12")) #
#Convertimos en formato fecha
unique(DataRegiones$Fecha1)
#Convertimos en formato fecha
unique(DataRegiones$Fecha2)
DataRegiones[,c(9:10)] <- sapply(DataRegiones[,c(9:10)], function(x) dmy(x)) #
View(DataRegiones)
DataRegiones[,c(9:10)] <- sapply(DataRegiones[,c(9:10)], function(x) as_date(x)) #
View(DataRegiones)
DataRegiones <- DataRegiones[,-c(9:10)]
DataRegiones <- DataRegiones%>%
mutate(Fecha1=`Periodo inicial`,
Fecha2=`Periodo final`)
View(DataRegiones)
#Convertimos en formato fecha
unique(DataRegiones$Fecha1)
#Convertimos en formato fecha
unique(DataRegiones$Fecha2)
DataRegiones[,c(9:10)] <- sapply(DataRegiones[,c(9:10)], function(x) str_replace_all(x,
pattern = " de ",
replacement = "-")) #
View(DataRegiones)
#Convertimos en formato fecha
unique(DataRegiones$Fecha1)
#Convertimos en formato fecha
unique(DataRegiones$Fecha2)
DataRegiones[,c(9:10)] <- sapply(DataRegiones[,c(9:10)], function(x) str_replace_all(x,
pattern = "enero",
replacement = "01")) #
DataRegiones[,c(9:10)] <- sapply(DataRegiones[,c(9:10)], function(x) str_replace_all(x,
pattern = "marzo",
replacement = "03")) #
DataRegiones[,c(9:10)] <- sapply(DataRegiones[,c(9:10)], function(x) str_replace_all(x,
pattern = "abril",
replacement = "04")) #
DataRegiones[,c(9:10)] <- sapply(DataRegiones[,c(9:10)], function(x) str_replace_all(x,
pattern = "mayo",
replacement = "05")) #
DataRegiones[,c(9:10)] <- sapply(DataRegiones[,c(9:10)], function(x) str_replace_all(x,
pattern = "junio",
replacement = "06")) #
DataRegiones[,c(9:10)] <- sapply(DataRegiones[,c(9:10)], function(x) str_replace_all(x,
pattern = "julio",
replacement = "07")) #
DataRegiones[,c(9:10)] <- sapply(DataRegiones[,c(9:10)], function(x) str_replace_all(x,
pattern = "agosto",
replacement = "08")) #
DataRegiones[,c(9:10)] <- sapply(DataRegiones[,c(9:10)], function(x) str_replace_all(x,
pattern = "septiembre",
replacement = "09")) #
DataRegiones[,c(9:10)] <- sapply(DataRegiones[,c(9:10)], function(x) str_replace_all(x,
pattern = "octubre",
replacement = "10")) #
DataRegiones[,c(9:10)] <- sapply(DataRegiones[,c(9:10)], function(x) str_replace_all(x,
pattern = "noviembre",
replacement = "11")) #
DataRegiones[,c(9:10)] <- sapply(DataRegiones[,c(9:10)], function(x) str_replace_all(x,
pattern = "diciembre",
replacement = "12")) #
#Convertimos en formato fecha
unique(DataRegiones$Fecha1)
#Convertimos en formato fecha
unique(DataRegiones$Fecha2)
DataRegiones[,c(9:10)] <- sapply(DataRegiones[,c(9:10)], function(x) str_pad(x,width = 10,side = "left",
pad = "0")) #
#Convertimos en formato fecha
unique(DataRegiones$Fecha1)
#Convertimos en formato fecha
unique(DataRegiones$Fecha2)
DataRegiones <- DataRegiones%>%
mutate(Fecha11=Fecha1,
Fecha22=Fecha2)
View(DataRegiones)
DataRegiones[,c(11:12)] <- sapply(DataRegiones[,c(11:12)], function(x) dmy(x)) #
View(DataRegiones)
DataRegiones[,c(11:12)] <- sapply(DataRegiones[,c(11:12)], function(x) as_date(x)) #
View(DataRegiones)
View(DataRegiones)
DataRegiones <- DataRegiones[,-c(11:12)]
DataRegiones <- DataRegiones%>%
mutate(Fecha11=Fecha1,
Fecha22=Fecha2)
#library(lubridate)
DataRegiones[,c(11:12)] <- sapply(DataRegiones[,c(11:12)], function(x) as.Date(x,format='%d-%b-%Y')) #
View(DataRegiones)
DataRegiones <- DataRegiones[,-c(11:12)]
DataRegiones <- DataRegiones%>%
mutate(Fecha11=Fecha1,
Fecha22=Fecha2)
#library(lubridate)
DataRegiones[,c(11:12)] <- sapply(DataRegiones[,c(11:12)], function(x) as.Date(x,format="%Y-%m-%d")) #
View(DataRegiones)
DataRegiones <- DataRegiones[,-c(11:12)]
DataRegiones <- DataRegiones%>%
mutate(Fecha11=Fecha1,
Fecha22=Fecha2)
#library(lubridate)
DataRegiones[,c(11:12)] <- sapply(DataRegiones[,c(11:12)], function(x) format(as.Date(x,format="%d-%m-%Y"),"%Y-%m-%d")) #
View(DataRegiones)
DataRegiones <- DataRegiones[,-c(11:12)]
DataRegiones <- DataRegiones%>%
mutate(Fecha11=Fecha1,
Fecha22=Fecha2)
#library(lubridate)
DataRegiones[,c(11:12)] <- sapply(DataRegiones[,c(11:12)], function(x) as.Date(x,format="%d-%m-%Y")) #
View(DataRegiones)
DataRegiones[,c(11:12)] <- sapply(DataRegiones[,c(11:12)], function(x) date(x))
View(DataRegiones)
DataRegiones <- DataRegiones[,-c(11:12)]
DataRegiones <- DataRegiones%>%
mutate(Fecha11=Fecha1,
Fecha22=Fecha2)
#library(lubridate)
#DataRegiones[,c(11:12)] <- sapply(DataRegiones[,c(11:12)], function(x) as.Date(x,format="%d-%m-%Y")) #R No admite este formato
DataRegiones[,c(11:12)] <- sapply(DataRegiones[,c(11:12)], function(x) format(as.Date(x,format="%d-%m-%Y"),"%Y-%m-%d")) #
View(DataRegiones)
View(DataRegiones)
DataRegiones[,c(11:12)] <- sapply(DataRegiones[,c(11:12)], function(x) ymd(x)) # formato fecha
View(DataRegiones)
#library(lubridate)
#DataRegiones[,c(11:12)] <- sapply(DataRegiones[,c(11:12)], function(x) as.Date(x,format="%d-%m-%Y")) #R No admite este formato
DataRegiones[,c(11:12)] <- sapply(DataRegiones[,c(11:12)], function(x) format(as.Date(x,format="%d-%m-%Y"),"%Y-%m-%d")) #
View(DataRegiones)
DataRegiones <- DataRegiones[,-c(11:12)]
DataRegiones <- DataRegiones%>%
mutate(Fecha11=Fecha1,
Fecha22=Fecha2)
View(DataRegiones)
#library(lubridate)
DataRegiones[,c(11:12)] <- sapply(DataRegiones[,c(11:12)], function(x) as.Date(x,format="%d-%m-%Y")) #R No admite este formato
View(DataRegiones)
DataRegiones$Fecha22 <- as.Date(DataRegiones$Fecha22)
DataRegiones <- DataRegiones[,-c(11:12)]
DataRegiones <- DataRegiones%>%
mutate(Fecha11=Fecha1,
Fecha22=Fecha2)
DataRegiones$Fecha22 <- as.Date(DataRegiones$Fecha22,format = "%d-%m-%Y")
View(DataRegiones)
View(DataRegiones)
DataRegiones <- DataRegiones[,-c(11:12)]
DataRegiones <- DataRegiones%>%
mutate(Fecha11=Fecha1,
Fecha22=Fecha2)
View(DataRegiones)
#library(lubridate)
#DataRegiones[,c(11:12)] <- sapply(DataRegiones[,c(11:12)], function(x) as.Date(x,format="%d-%m-%Y")) #R No admite este formato en sapplay
#DataRegiones$Fecha22 <- as.Date(DataRegiones$Fecha22,format = "%d-%m-%Y") #Aqui si
DataRegiones[,c(11:12)] <- sapply(DataRegiones[,c(11:12)], function(x) format(as.Date(x,format="%d-%m-%Y"),"%Y-%m-%d")) #
View(DataRegiones)
DataRegiones[,c(11:12)] <- sapply(DataRegiones[,c(11:12)], function(x) ymd(x)) # formato fecha
View(DataRegiones)
DataRegiones[,c(11:12)] <- sapply(DataRegiones[,c(11:12)], function(x) as.Date(x)) # formato fecha
View(DataRegiones)
DataRegiones <- DataRegiones[,-c(11:12)]
DataRegiones <- DataRegiones%>%
mutate(Fecha11=Fecha1,
Fecha22=Fecha2)
#library(lubridate)
#DataRegiones[,c(11:12)] <- sapply(DataRegiones[,c(11:12)], function(x) as.Date(x,format="%d-%m-%Y")) #R No admite este formato en sapplay
#DataRegiones$Fecha22 <- as.Date(DataRegiones$Fecha22,format = "%d-%m-%Y") #Aqui si
DataRegiones[,c(11:12)] <- sapply(DataRegiones[,c(11:12)], function(x) format(as.Date(x,format="%d-%m-%Y"),"%Y-%m-%d")) #
DataRegiones[,c(11:12)] <- sapply(DataRegiones[,c(11:12)], function(x) as.Date(x)) # formato fecha
View(DataRegiones)
View(DataRegiones)
#DataRegiones[,c(11:12)] <- sapply(DataRegiones[,c(11:12)], function(x) as.Date(x)) # No funciona
DataRegiones <- DataRegiones[,-c(11:12)]
DataRegiones <- DataRegiones%>%
mutate(Fecha11=Fecha1,
Fecha22=Fecha2)
#library(lubridate)
#DataRegiones[,c(11:12)] <- sapply(DataRegiones[,c(11:12)], function(x) as.Date(x,format="%d-%m-%Y")) #R No admite este formato en sapplay
#DataRegiones$Fecha22 <- as.Date(DataRegiones$Fecha22,format = "%d-%m-%Y") #Aqui si
DataRegiones[,c(11:12)] <- sapply(DataRegiones[,c(11:12)], function(x) format(as.Date(x,format="%d-%m-%Y"),"%Y-%m-%d")) #
View(DataRegiones)
View(DataRegiones)
sapply(DataRegiones, class)
#DataRegiones[,c(11:12)] <- sapply(DataRegiones[,c(11:12)], function(x) as.Date(x)) # No funciona
DataRegiones$Fecha11 <- ymd(DataRegiones$Fecha11)
DataRegiones$Fecha12 <- ymd(DataRegiones$Fecha12)
View(DataRegiones)
DataRegiones$Fecha12 <- ymd(DataRegiones$Fecha22)
View(DataRegiones)
#
DataRegiones <- DataRegiones[,-c(11:13)]
View(DataRegiones)
DataRegiones <- DataRegiones%>%
mutate(Fecha11=Fecha1,
Fecha22=Fecha2)
#library(lubridate)
#DataRegiones[,c(11:12)] <- sapply(DataRegiones[,c(11:12)], function(x) as.Date(x,format="%d-%m-%Y")) #R No admite este formato en sapplay
#DataRegiones$Fecha22 <- as.Date(DataRegiones$Fecha22,format = "%d-%m-%Y") #Aqui si
DataRegiones[,c(11:12)] <- sapply(DataRegiones[,c(11:12)], function(x) format(as.Date(x,format="%d-%m-%Y"),"%Y-%m-%d")) #
View(DataRegiones)
#
sapply(DataRegiones, class)
#DataRegiones[,c(11:12)] <- sapply(DataRegiones[,c(11:12)], function(x) as.Date(x)) # No funciona
DataRegiones$Fecha11 <- ymd(DataRegiones$Fecha11) #Funcion lubridate
DataRegiones$Fecha22 <- ymd(DataRegiones$Fecha22) #
#
sapply(DataRegiones, class)
View(DataRegiones)
DataRegiones <- DataRegiones[,-c(11:12)]
View(DataRegiones)
#library(lubridate)
#DataRegiones[,c(11:12)] <- sapply(DataRegiones[,c(11:12)], function(x) as.Date(x,format="%d-%m-%Y")) #R No admite este formato en sapplay
#DataRegiones$Fecha22 <- as.Date(DataRegiones$Fecha22,format = "%d-%m-%Y") #Aqui si
DataRegiones[,c(9:10)] <- sapply(DataRegiones[,c(9:10)], function(x) format(as.Date(x,format="%d-%m-%Y"),"%Y-%m-%d")) #
View(DataRegiones)
#
sapply(DataRegiones, class)
#DataRegiones[,c(11:12)] <- sapply(DataRegiones[,c(11:12)], function(x) as.Date(x)) # No funciona
DataRegiones$Fecha1 <- ymd(DataRegiones$Fecha1) #Funcion lubridate
DataRegiones$Fecha2 <- ymd(DataRegiones$Fecha2) #
#
sapply(DataRegiones, class)
View(DataRegiones)
DataRegiones <- DataRegiones%>%
select(c(1:5,9:10),everything())
View(DataRegiones)
#Guardamos la data limpia
saveRDS(DataRegiones,file = "ShinyAppSIAF/DataGobiernosRL/Data_GregionalLimpia.rds")
View(DataRegiones)
#Le sacamos el año y mes
DataRegiones <- DataRegiones%>%
mutate(AñoInicio=year(Fecha1),
AñoFinal=year(Fecha2))
View(DataRegiones)
#Guardamos la data limpia
saveRDS(DataRegiones,file = "ShinyAppSIAF/DataGobiernosRL/Data_GregionalLimpia.rds")
View(DataRegiones)
shiny::runApp('ShinyAppSIAF')
shiny::runApp('ShinyAppSIAF')
:
---
title: "R Notebook"
output: html_notebook
---
